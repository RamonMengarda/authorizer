package com.ramonmengarda.authorizer.model;

import java.math.BigDecimal;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Version;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Card {

    /*
     * cardRepository.save() acts as an INSERT or as an UPDATE, so external IDs,
     * such as cardNumber, won't work as
     * unique identifiers for cards. Because of this, we'll implement an additional
     * ID field which can be
     * autogenerated and managed by JPARepository
     */
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    private Long number;
    private BigDecimal balance;
    private String password;

    /*
     * In order to prevent simultaneous access on the same resource (Card), we'll
     * implement a version number,
     * which throws ObjectOptimisticLockingFailureException in case of conflict
     */
    @Version
    private Long version;
}
